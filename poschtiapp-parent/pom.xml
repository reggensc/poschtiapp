<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>reggensc.poschtiapp</groupId>
	<artifactId>poschtiapp-parent</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<modules>
		<module>poschtiapp-domain</module>
	</modules>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
		<sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
		<!-- The destination file for the code coverage report has to be set to 
			the same value in the parent pom and in each module pom. Then JaCoCo will 
			add up information in the same report, so that, it will give the cross-module 
			code coverage. -->
		<sonar.jacoco.itReportPath>${project.basedir}/../target/jacoco-it.exec</sonar.jacoco.itReportPath>
		<sonar.language>java</sonar.language>
	</properties>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.2</version>
					<configuration>
						<source>1.8</source>
						<target>1.8</target>
						<testSource>1.8</testSource>
						<testTarget>1.8</testTarget>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<!-- Minimal supported version is 2.4 -->
					<version>2.18</version>
					<configuration>
						<properties>
							<property>
								<name>listener</name>
								<value>org.sonar.java.jacoco.JUnitListener</value>
							</property>
						</properties>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>0.7.2.201409121644</version>
					<executions>
						<execution>
							<id>pre-unit-test</id>
							<goals>
								<goal>prepare-agent</goal>
							</goals>
							<!-- <configuration> Sets the path to the file which contains the 
								execution data. <destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile> 
								Sets the name of the property containing the settings for JaCoCo runtime 
								agent. <propertyName>surefireArgLine</propertyName> </configuration> -->
						</execution> <!-- Ensures that the code coverage report for unit tests is created after 
							unit tests have been run. <execution> <id>post-unit-test</id> <phase>test</phase> 
							<goals> <goal>report</goal> </goals> <configuration> Sets the path to the 
							file which contains the execution data. <dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile> 
							Sets the output directory for the code coverage report. <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory> 
							</configuration> </execution> The Executions required by unit tests are omitted. 
							Prepares the property pointing to the JaCoCo runtime agent which is passed 
							as VM argument when Maven the Failsafe plugin is executed. <execution> <id>pre-integration-test</id> 
							<phase>pre-integration-test</phase> <goals> <goal>prepare-agent</goal> </goals> 
							<configuration> Sets the path to the file which contains the execution data. 
							<destFile>${project.build.directory}/coverage-reports/jacoco-it.exec</destFile> 
							Sets the name of the property containing the settings for JaCoCo runtime 
							agent. <propertyName>failsafeArgLine</propertyName> </configuration> </execution> 
							Ensures that the code coverage report for integration tests after integration 
							tests have been run. <execution> <id>post-integration-test</id> <phase>post-integration-test</phase> 
							<goals> <goal>report</goal> </goals> <configuration> Sets the path to the 
							file which contains the execution data. <dataFile>${project.build.directory}/coverage-reports/jacoco-it.exec</dataFile> 
							Sets the output directory for the code coverage report. <outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory> 
							</configuration> </execution> -->
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.hibernate.javax.persistence</groupId>
				<artifactId>hibernate-jpa-2.1-api</artifactId>
				<version>1.0.0.Final</version>
			</dependency>

			<!-- Test Dependencies -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.11</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.codehaus.sonar-plugins.java</groupId>
				<artifactId>sonar-jacoco-listeners</artifactId>
				<version>2.5.1</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.jacoco</groupId>
				<artifactId>org.jacoco.agent</artifactId>
				<classifier>runtime</classifier>
				<version>0.7.2.201409121644</version>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

</project>